#! /usr/bin/env python
# coding=utf-8
"""
 4生成动态参数 int,double,bool,string,列表
 5实现流程:
 6    1.导包
 7    2.创建生成器
 8    3.向生成器添加若干参数
 9    4.生成中间文件并退出
10
"""
# 1.导包
from dynamic_reconfigure.parameter_generator_catkin import *
PACKAGE = "demo02_dr"
# 2.创建生成器
gen = ParameterGenerator()

# 3.向生成器添加若干参数
#add(name, paramtype, level, description, default=None, min=None, max=None, edit_method="")
gen.add("brake",int_t,0,"刹车",0,0,655)
gen.add("throttle",int_t,0,"油门",0,0,655)
gen.add("string_param",str_t,0,"字符串参数","hello world ")
gen.add("addThrottle",bool_t,0," 增加油门",True)

many_enum = gen.enum([gen.const("one",int_t,1,"a small size"),
                gen.const("two",int_t,2,"a medium size"),
                gen.const("three",int_t,3,"a big size"),
                gen.const("four",int_t,4,"a big big size"),
                gen.const("five",int_t,5,"a big big big size")
                ],"a car size set")
gen.add("car_class",int_t,0,"档位",1,1,5, edit_method=many_enum)

engine_enum = gen.enum([gen.const("engine_one",int_t,1,"a small size"),
                gen.const("engine_two",int_t,2,"a medium size"),
                gen.const("engine_three",int_t,3,"a big size"),
                ],"a car size set")
gen.add("engine",int_t,0,"引擎映射",1,1,3, edit_method=engine_enum)


# 4.生成中间文件并退出
exit(gen.generate(PACKAGE,"dr_node","dr"))
